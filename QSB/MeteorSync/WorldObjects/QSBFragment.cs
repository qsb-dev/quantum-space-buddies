using Cysharp.Threading.Tasks;
using QSB.WorldSync;
using System.Threading;
using UnityEngine;

namespace QSB.MeteorSync.WorldObjects;

public class QSBFragment : WorldObject<FragmentIntegrity>
{
	public override async UniTask Init(CancellationToken ct)
	{
		if (QSBCore.IsHost)
		{
			LeashLength = Random.Range(MeteorManager.WhiteHoleVolume._debrisDistMin, MeteorManager.WhiteHoleVolume._debrisDistMax);
			// SetIntegrity(0);
		}
	}

	public void SetIntegrity(float integrity)
	{
		if (OWMath.ApproxEquals(AttachedObject._integrity, integrity))
		{
			return;
		}

		AttachedObject._integrity = integrity;
		AttachedObject.CallOnTakeDamage();
	}

	/// <summary>
	/// what the leash length will be when we eventually detach and fall thru white hole.
	/// <para/>
	/// generated by the server and sent to clients in the initial state message.
	/// </summary>
	public float? LeashLength;
}
